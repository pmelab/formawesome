<?php
/**
 * @file
 * Form enhancements. Make your forms awesome!
 */

/**
 * Implements hook_theme().
 */
function formawesome_theme() {
  return array(
    'formawesome_element' => array(
      'render element' => 'element',
    ),
    'formawesome_enhance' => array(
      'render element' => 'element',
    ),
  );
}

/**
 * Implements hook_page_build().
 */
function formawesome_page_build() {
  global $theme;

  $module = drupal_get_path('module', 'formawesome');
  $library = libraries_get_path('select2');

  $select = theme_get_setting('formawesome_select', $theme);

  if ($select && $select != 'none') {
    drupal_add_js($library . '/select2.min.js');
    drupal_add_js($module . '/js/formawesome.select2.js');
    if ($select == 'default') {
      drupal_add_css($library . '/select2.css');
    }
    elseif ($select == 'naked') {
      drupal_add_css($module . '/css/formawesome.select2.css');
    }
  }
}

/**
 * Implements hook_module_implements_alter().
 *
 * Make sure that formawesome_element_info_alter() is executed at last.
 */
function formawesome_module_implements_alter(&$info, $hook) {
  if ($hook == 'element_info_alter') {
    unset($info['formawesome']);
    $info['formawesome'] = FALSE;
  }
}

/**
 * Implements hook_element_info_alter().
 */
function formawesome_element_info_alter(&$info) {
  $excluded = array('hidden', 'token', 'value');
  foreach ($info as $id => $element) {
    if (array_key_exists('#input', $element) && $element['#input'] && !in_array($id, $excluded)) {
      $info[$id]['#theme_wrappers'][] = 'formawesome_element';
      if (!is_array($info[$id]['#process'])) {
        $info[$id]['#process'] = array();
      }
      array_unshift($info[$id]['#process'], 'formawesome_form_element_process');
    }
  }
  //array_unshift($info['file']['#theme_wrappers'], 'formawesome_enhance_file');
  array_unshift($info['checkbox']['#theme_wrappers'], 'formawesome_enhance');
  array_unshift($info['radio']['#theme_wrappers'], 'formawesome_enhance');
}

/**
 * Process form elements.
 */
function formawesome_form_element_process(&$element, &$form_state, &$complete_form) {
  if (isset($element['#title_display']) && $element['#title_display'] == 'placeholder') {
    $element['#placeholder_label'] = TRUE;
    $element['#title_display'] = 'before';
  }
  return $element;
}

/**
 * Wrap checkboxes and radio buttons to enable css styling.
 */
function theme_formawesome_enhance(&$variables) {
  global $theme;
  $element = $variables['element'];
  if (theme_get_setting('formawesome_checkboxes', $theme)) {
    return '<span class="formawesome-enhanced">' . $element['#children'] . '</span>';
  }
  else {
    return $element['#children'];
  }
}

/**
 * Wrap form items in an additional wrapper and attach icons and error classes.
 */
function theme_formawesome_element(&$variables) {
  $element = $variables['element'];

  $attributes = array();
  $attributes['class'] = array_key_exists('#wrapper_class', $element) ? $element['#wrapper_class'] : array();
  $attributes['class'][] = 'formawesome-wrapper';
  $attributes['class'][] = 'formawesome-' . $element['#type'];

  $content = $variables['element']['#children'];

  // Attach an icon if required.
  $icon = isset($element['#icon']) ? $element['#icon'] : FALSE;
  $iconpos = isset($element['#icon_position']) ? $element['#icon_position'] : 'before';
  if ($icon) {
    $attributes['class'][] = 'formawesome-icon';
    $attributes['class'][] = 'formawesome-icon-position-' . $iconpos;
    if ($iconpos == 'before') {
      $content = '<i class="icon-' . $icon . '"></i>' . $content;
    }
    else {
      $content .= '<i class="icon-' . $icon . '"></i>';
    }
  }

  // Check if there are errors and add a class to the wrapper div.
  if ($error = form_get_error($element)) {
    $attributes['class'][] = 'formawesome-error';
  }

  // Placeholder label.
  if (isset($element['#placeholder_label']) && $element['#placeholder_label']) {
    $attributes['class'][] = 'formawesome-placeholder-label';
  }

  return '<div ' . drupal_attributes($attributes) . '>' . $content . '</div>';
}

/**
 * Implements hook_form_system_theme_settings_alter().
 */
function formawesome_form_system_theme_settings_alter(&$form, &$form_state) {
  $theme = count($form_state['build_info']['args']) > 0 ? $form_state['build_info']['args'][0] : FALSE;
  $form['formawesome'] = array(
    '#type' => 'fieldset',
    '#title' => t('FormAwesome'),
    '#description' => t('Configure form enhancements for this theme.'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    'formawesome_select' => array(
      '#type' => 'select',
      '#title' => t('Selectboxes'),
      '#options' => array(
        'none' => t('None'),
        'default' => t('Default'),
        'naked' => t('Naked'),
      ),
      '#default_value' => theme_get_setting('formawesome_select', $theme),
    ),
    'formawesome_checkboxes' => array(
      '#type' => 'checkbox',
      '#title' => t('Checkboxes / Radio buttons'),
      '#description' => t('Make checkboxes and radio buttons css styleable.'),
      '#default_value' => theme_get_setting('formawesome_checkboxes', $theme),
    ),
  );
}
